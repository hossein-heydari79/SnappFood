@mixin border-radius($radius: $border-radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin transition(
  $property: all,
  $duration: $transition-duration,
  $ease: $ease-out-quart
) {
  -webkit-transition: $property $duration $ease;
  -moz-transition: $property $duration $ease;
  -ms-transition: $property $duration $ease;
  -o-transition: $property $duration $ease;
  transition: $property $duration $ease;
}

@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}

@mixin linearGradientBuilder($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

@mixin skeletonEffect {
  background-color: rgb(248, 248, 248);
  // animation: loading 1.5s infinite linear alternate
  @at-root {
    @keyframes loading {
      to {
        background-color: #eeee;
      }
    }
  }
}
@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flexLayout($direction, $justify: null, $align: null, $wrap: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}
@mixin fontStyles(
  $size: --text-medium,
  $weight: --font-medium,
  $color: --text-color
) {
  font-size: var($size);
  font-weight: var($weight);
  color: var($color);
}
@mixin imgWrapper($size) {
  width: inherit;
  height: var($size);
  overflow: hidden;
  position: relative;
}
@mixin cardBottomBorder {
  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 90%;
    margin: auto;
    height: 1px;
    background-color: var(--card-border-color);
  }
}
@mixin textEllipsis($width: 100%) {
  width: $width;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin background-style($size: null, $position: null) {
  background-size: $size;
  background-position: $position;
  background-repeat: no-repeat;
}

@mixin linear-grad($value) {
  background: -webkit-linear-gradient($value);
  background: linear-gradient($value);
}
@mixin skeletonEffect {
  --skeleton-bg-color: #f0f0f0;
  overflow: hidden;
  position: relative;
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    transform: translateX(100%);
    background: linear-gradient(
      90deg,
      rgba(#ffffff, 0) 80%,
      rgba(#ffffff, 0) 50%,
      rgba(#ffffff, 0.6) 90%,
      rgba(#ffffff, 0) 95%,
      rgba(#ffffff, 0) 100%
    );
    filter: blur(20px);
    animation: loading 1.5s infinite;
    z-index: 100;
    @keyframes loading {
      100% {
        transform: translateX(-100%);
      }
    }
  }
}
